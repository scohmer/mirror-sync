FROM docker.io/node:18-alpine as builder

WORKDIR /app

# Copy frontend package files from build context
COPY frontend/package*.json ./

# Install dependencies  
RUN npm install

# Copy frontend source code from build context  
COPY frontend/ .

# Build the frontend application
RUN npm run build

# Production stage
FROM docker.io/nginx:alpine

# Copy nginx configuration  
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Copy built frontend assets
COPY --from=builder /app/dist /usr/share/nginx/html

# Create required directories and set permissions using existing nginx user
RUN mkdir -p /var/cache/nginx /var/log/nginx /tmp && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /tmp /etc/nginx /usr/share/nginx/html

# Switch to existing nginx user
USER nginx

EXPOSE 8080

CMD ["nginx", "-g", "daemon off;"]